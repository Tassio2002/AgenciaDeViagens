// <auto-generated />
using System;
using KiViagemDB.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KiViagemDB.Migrations
{
    [DbContext(typeof(BancoDeDados))]
    [Migration("20211220155130_KiViagem")]
    partial class KiViagem
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KiViagemDB.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DestinoId")
                        .HasColumnType("int");

                    b.Property<int>("Idade")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClienteID");

                    b.HasIndex("DestinoId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("KiViagemDB.Models.Compra", b =>
                {
                    b.Property<int>("CompraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClienteID")
                        .HasColumnType("int");

                    b.Property<int?>("DestinoId")
                        .HasColumnType("int");

                    b.Property<int?>("PromoId")
                        .HasColumnType("int");

                    b.HasKey("CompraId");

                    b.HasIndex("ClienteID");

                    b.HasIndex("DestinoId");

                    b.HasIndex("PromoId");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("KiViagemDB.Models.Destino", b =>
                {
                    b.Property<int>("DestinoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pais")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Valor")
                        .HasColumnType("real");

                    b.HasKey("DestinoId");

                    b.ToTable("Destinos");
                });

            modelBuilder.Entity("KiViagemDB.Models.Promo", b =>
                {
                    b.Property<int>("PromoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteID")
                        .HasColumnType("int");

                    b.Property<string>("NomePromo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PorcentagemDesc")
                        .HasColumnType("int");

                    b.HasKey("PromoId");

                    b.HasIndex("ClienteID")
                        .IsUnique();

                    b.ToTable("promos");
                });

            modelBuilder.Entity("KiViagemDB.Models.Cliente", b =>
                {
                    b.HasOne("KiViagemDB.Models.Destino", "Destino")
                        .WithMany()
                        .HasForeignKey("DestinoId");

                    b.Navigation("Destino");
                });

            modelBuilder.Entity("KiViagemDB.Models.Compra", b =>
                {
                    b.HasOne("KiViagemDB.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteID");

                    b.HasOne("KiViagemDB.Models.Destino", "Destino")
                        .WithMany()
                        .HasForeignKey("DestinoId");

                    b.HasOne("KiViagemDB.Models.Promo", "Promo")
                        .WithMany()
                        .HasForeignKey("PromoId");

                    b.Navigation("Cliente");

                    b.Navigation("Destino");

                    b.Navigation("Promo");
                });

            modelBuilder.Entity("KiViagemDB.Models.Promo", b =>
                {
                    b.HasOne("KiViagemDB.Models.Cliente", null)
                        .WithOne("Promo")
                        .HasForeignKey("KiViagemDB.Models.Promo", "ClienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KiViagemDB.Models.Cliente", b =>
                {
                    b.Navigation("Promo");
                });
#pragma warning restore 612, 618
        }
    }
}
